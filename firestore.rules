rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for teacherRequests collection
    match /teacherRequests/{userId} {
      allow read: if request.auth != null && (
        request.auth.token.role == "admin" || 
        request.auth.uid == userId
      );
      allow create: if request.resource.data.role == "teacher";
      allow update: if request.auth != null && 
                    request.auth.token.role == "admin";
      allow write: if request.auth != null && 
                   request.auth.token.role == "admin";
    }

    // Rules for contents collection
    match /contents/{contentId} {
      // Allow read if user is authenticated OR student nickname exists in the students collection
      allow read: if request.auth != null || isStudentByNickname();
      allow write: if request.auth != null && 
                   (request.resource.data.type == 'uploaded-material' || 
                    request.resource.data.type == 'assessment');
    }

    // Function to verify student by nickname passed in query param or request header
    function isStudentByNickname() {
      return request.resource != null &&
             request.resource.data.nickname != null &&
             exists(/databases/$(database)/documents/students/$(request.resource.data.nickname));
    }

    // Rules for teachers collection
    match /teachers/{teacherId} {
      allow read: if request.auth != null && (
        request.auth.uid == teacherId || 
        request.auth.token.admin == true
      ) && resource.data.isArchived != true;
      allow write: if request.auth != null && (
        request.auth.uid == teacherId || 
        request.auth.token.admin == true
      );
    }

    // Rules for students collection
    match /students/{document} {
      // Allow read for authenticated users and allow write for memory retention system
      allow read: if true;
      allow write: if true;
    }

    // Rules for logins collection
    match /logins/{loginId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Rules for studentLogins collection
    match /studentLogins/{loginId} {
      allow read, write: if true;
    }

    // Rules for archives collection
    match /archives/{teacherId} {
      allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Rules for systemLogs collection
    match /systemLogs/{logId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Rules for materials collection
    match /materials/{materialId} {
      allow read, write: if true;
    }

    // Rules for assessments collection
    match /assessments/{assessmentId} {
      allow read, write: if true;
    }

    // Rules for lessonCompletions collection (Memory Retention System)
    match /lessonCompletions/{completionId} {
      allow read, write: if true;
    }

    // Rules for userActivity collection (Memory Retention System)
    match /userActivity/{activityId} {
      allow read, write: if true;
    }

    // Rules for lessonRetention collection (Memory Retention System)
    match /lessonRetention/{retentionId} {
      allow read, write: if true;
    }

    // Rules for userStats collection (Gamification System)
    match /userStats/{userId} {
      allow read, write: if true;
    }

    // Rules for userBadges collection (Gamification System)
    match /userBadges/{badgeId} {
      allow read, write: if true;
    }

    // Rules for userActivities collection (Gamification System)
    match /userActivities/{activityId} {
      allow read, write: if true;
    }

    // Rules for focusSessions collection (Focus System)
    match /focusSessions/{sessionId} {
      allow read, write: if true;
    }

    // Rules for breakSessions collection (Focus System)
    match /breakSessions/{sessionId} {
      allow read, write: if true;
    }

    // Rules for adaptiveAssessmentResults collection (Adaptive Assessment System)
    match /adaptiveAssessmentResults/{resultId} {
      allow read, write: if true;
    }

    // Rules for userAdaptiveLevels collection (Adaptive Assessment System)
    match /userAdaptiveLevels/{userId} {
      allow read, write: if true;
    }

    // Rules for userProgress collection (Adaptive Assessment System)
    match /userProgress/{userId} {
      allow read, write: if true;
    }

    // Rules for userFocusSettings collection (Customizable Focus Settings)
    match /userFocusSettings/{nickname} {
      allow read, write: if true;
    }

    // Rules for pronunciationAssessments collection (Enhanced NLP System)
    match /pronunciationAssessments/{assessmentId} {
      allow read, write: if true;
    }

    // Rules for mindfulnessSessions collection (Mindfulness Exercises)
    match /mindfulnessSessions/{sessionId} {
      allow read, write: if true;
    }

    // Rules for memoryPalaceRooms collection (Visual Memory Palace)
    match /memoryPalaceRooms/{roomId} {
      allow read, write: if true;
    }

    // Rules for flashcardSessions collection (Flashcard System)
    match /flashcardSessions/{sessionId} {
      allow read, write: if true;
    }

    // Rules for visit tracking collections
    match /visitTracking/{visitId} {
      allow read, write: if true;
    }
    
    match /visitCounts/{countId} {
      allow read, write: if true;
    }

    // Default rule for all other collections - Allow authenticated users
    match /{collection}/{documentId} {
      allow read, write: if request.auth != null;
    }
  }
}
